{"ast":null,"code":"import { required, min } from \"vee-validate/dist/rules\";\nimport { extend, ValidationObserver, ValidationProvider, setInteractionMode } from \"vee-validate\";\nsetInteractionMode(\"eager\");\nextend(\"required\", {\n  ...required,\n  message: \"le champe {_field_} est obligatiore\"\n});\nextend(\"min\", {\n  ...min,\n  message: \"le champe {_field_} ne doit pas etre moin de {length} characters\"\n});\nexport default {\n  components: {\n    ValidationObserver,\n    ValidationProvider\n  },\n  data: () => ({\n    dialog: false,\n    nom: null,\n    headers: [{\n      text: \"Identification\",\n      align: \"start\",\n      sortable: true,\n      value: \"_id\"\n    }, {\n      text: \"Name\",\n      sortable: true,\n      value: \"name\"\n    }]\n  }),\n  mounted: function () {\n    this.$store.dispatch(\"fetchTeams\");\n    this.teamList = this.$store.state.teams.data;\n  },\n  computed: {\n    teamList: {\n      get() {\n        return this.$store.state.teams.data;\n      },\n      set(newValue) {\n        this.$store.commit(\"updateTeams\", newValue);\n      }\n    }\n  },\n  methods: {\n    submit() {\n      this.$refs.observer.validate();\n      this.$store.dispatch(\"createTeam\", {\n        name: this.nom\n      });\n      this.dialog = false;\n      this.orgList.set(this.$store.state.orgNames.data);\n    },\n    clear() {\n      this.secret = \"\";\n      this.nom = \"\";\n      this.$refs.observer.reset();\n    }\n  }\n};","map":{"version":3,"names":["required","min","extend","ValidationObserver","ValidationProvider","setInteractionMode","message","components","data","dialog","nom","headers","text","align","sortable","value","mounted","$store","dispatch","teamList","state","teams","computed","get","set","newValue","commit","methods","submit","$refs","observer","validate","name","orgList","orgNames","clear","secret","reset"],"sources":["src/components/TeamListComponent.vue"],"sourcesContent":["<template>\n    <div>\n      <v-row justify=\"center\">\n        <v-dialog v-model=\"dialog\" persistent max-width=\"600px\">\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-btn class=\"mt-5\" color=\"primary\" dark v-bind=\"attrs\" v-on=\"on\">\n              Ajouter Team\n            </v-btn>\n          </template>\n          <v-card>\n            <validation-observer ref=\"observer\" v-slot=\"{ invalid }\">\n              <form @submit.prevent=\"submit\">\n                <v-card-title>\n                  <span class=\"text-h5\">Team information</span>\n                </v-card-title>\n                <v-card-text>\n                  <v-container>\n                    <!--eslint-disable-next-line-->\n  \n                    <v-row>\n                      <v-col cols=\"12\">\n                        <validation-provider\n                          v-slot=\"{ errors }\"\n                          name=\"nom\"\n                          rules=\"required|min:8\"\n                        >\n                          <v-text-field\n                            label=\"Nom*\"\n                            :error-messages=\"errors\"\n                            v-model=\"nom\"\n                            required\n                          >\n                          </v-text-field>\n                        </validation-provider>\n                      </v-col>\n                    </v-row>\n                  </v-container>\n                  <small>* c-a-d champ est obligatoir</small>\n                </v-card-text>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"blue darken-1\" text @click=\"dialog = false\">\n                    Close\n                  </v-btn>\n                  <v-btn\n                    type=\"submit\"\n                    :disabled=\"invalid\"\n                    color=\"blue darken-1\"\n                    text\n                  >\n                    Save\n                  </v-btn>\n                </v-card-actions>\n              </form>\n            </validation-observer>\n          </v-card>\n        </v-dialog>\n      </v-row>\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"teamList\"\n        :items-per-page=\"5\"\n        class=\"elevation-1 mx-3 my-3\"\n      >\n      </v-data-table>\n    </div>\n  </template>\n  \n  <script>\n  import { required, min } from \"vee-validate/dist/rules\";\n  import {\n    extend,\n    ValidationObserver,\n    ValidationProvider,\n    setInteractionMode,\n  } from \"vee-validate\";\n  setInteractionMode(\"eager\");\n  \n  extend(\"required\", {\n    ...required,\n    message: \"le champe {_field_} est obligatiore\",\n  });\n  \n  extend(\"min\", {\n    ...min,\n    message: \"le champe {_field_} ne doit pas etre moin de {length} characters\",\n  });\n  export default {\n    components: {\n      ValidationObserver,\n      ValidationProvider,\n    },\n    data: () => ({\n      dialog: false,\n      nom: null,\n      headers: [\n        {\n          text: \"Identification\",\n          align: \"start\",\n          sortable: true,\n          value: \"_id\",\n        },\n        { text: \"Name\", sortable: true, value: \"name\" },\n      ],\n    }),\n    mounted: function () {\n      this.$store.dispatch(\"fetchTeams\");\n      this.teamList = this.$store.state.teams.data;\n    },\n    computed: {\n      teamList: {\n        get() {\n          return this.$store.state.teams.data;\n        },\n        set(newValue) {\n          this.$store.commit(\"updateTeams\", newValue);\n        },\n      },\n    },\n    methods: {\n      submit() {\n        this.$refs.observer.validate();\n        this.$store.dispatch(\"createTeam\", {\n          name: this.nom,\n        });\n        this.dialog=false;\n        this.orgList.set(this.$store.state.orgNames.data)\n      },\n      clear() {\n        this.secret = \"\";\n        this.nom = \"\";\n        this.$refs.observer.reset();\n      },\n    },\n  };\n  </script>\n  \n  <style></style>\n  "],"mappings":"AAqEA,SAAAA,QAAA,EAAAC,GAAA;AACA,SACAC,MAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,kBAAA,QACA;AACAA,kBAAA;AAEAH,MAAA;EACA,GAAAF,QAAA;EACAM,OAAA;AACA;AAEAJ,MAAA;EACA,GAAAD,GAAA;EACAK,OAAA;AACA;AACA;EACAC,UAAA;IACAJ,kBAAA;IACAC;EACA;EACAI,IAAA,EAAAA,CAAA;IACAC,MAAA;IACAC,GAAA;IACAC,OAAA,GACA;MACAC,IAAA;MACAC,KAAA;MACAC,QAAA;MACAC,KAAA;IACA,GACA;MAAAH,IAAA;MAAAE,QAAA;MAAAC,KAAA;IAAA;EAEA;EACAC,OAAA,WAAAA,CAAA;IACA,KAAAC,MAAA,CAAAC,QAAA;IACA,KAAAC,QAAA,QAAAF,MAAA,CAAAG,KAAA,CAAAC,KAAA,CAAAb,IAAA;EACA;EACAc,QAAA;IACAH,QAAA;MACAI,IAAA;QACA,YAAAN,MAAA,CAAAG,KAAA,CAAAC,KAAA,CAAAb,IAAA;MACA;MACAgB,IAAAC,QAAA;QACA,KAAAR,MAAA,CAAAS,MAAA,gBAAAD,QAAA;MACA;IACA;EACA;EACAE,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,CAAAC,QAAA,CAAAC,QAAA;MACA,KAAAd,MAAA,CAAAC,QAAA;QACAc,IAAA,OAAAtB;MACA;MACA,KAAAD,MAAA;MACA,KAAAwB,OAAA,CAAAT,GAAA,MAAAP,MAAA,CAAAG,KAAA,CAAAc,QAAA,CAAA1B,IAAA;IACA;IACA2B,MAAA;MACA,KAAAC,MAAA;MACA,KAAA1B,GAAA;MACA,KAAAmB,KAAA,CAAAC,QAAA,CAAAO,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}