{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, min } from \"vee-validate/dist/rules\";\nimport { extend, ValidationObserver, ValidationProvider } from \"vee-validate\";\nextend(\"required\", {\n  ...required,\n  message: \"le champe {_field_} est obligatiore\"\n});\nextend(\"min\", {\n  ...min,\n  message: \"le champe {_field_} ne doit pas etre moin de {length} characters\"\n});\nexport default {\n  components: {\n    ValidationObserver,\n    ValidationProvider\n  },\n  data: () => ({\n    headers: [{\n      text: \"Identification\",\n      align: \"start\",\n      sortable: true,\n      value: \"_id\"\n    }, {\n      text: \"Name\",\n      sortable: true,\n      value: \"name\"\n    }, {\n      text: \"Actions\",\n      value: \"actions\",\n      sortable: false\n    }]\n  }),\n  mounted: function () {\n    this.$store.dispatch(\"fetchOrgs\");\n    this.orgList = this.$store.state.orgNames.data;\n  },\n  computed: {\n    orgList: {\n      get() {\n        return this.$store.state.orgNames.data;\n      },\n      set(newValue) {\n        this.$store.commit(\"updateOrgList\", newValue);\n      }\n    }\n  },\n  methods: {\n    editItem(item) {\n      let editedItem = Object.assign({}, item);\n      this.$store.dispatch(\"setCurrentOrg\", item);\n      this.$router.push(`orgs/${editedItem._id}`);\n    }\n  }\n};","map":{"version":3,"names":["required","min","extend","ValidationObserver","ValidationProvider","message","components","data","headers","text","align","sortable","value","mounted","$store","dispatch","orgList","state","orgNames","computed","get","set","newValue","commit","methods","editItem","item","editedItem","Object","assign","$router","push","_id"],"sources":["src/components/OrgListComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row justify=\"center\">\n      <v-dialog v-model=\"dialog\" persistent max-width=\"600px\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn class=\"mt-5\" color=\"primary\" dark v-bind=\"attrs\" v-on=\"on\">\n            Ajouter Organisations\n          </v-btn>\n        </template>\n        <v-card>\n          <v-card-title>\n            <span class=\"text-h5\">Organisation information</span>\n          </v-card-title>\n          <v-card-text>\n            <v-container>\n                <!--eslint-disable-next-line-->\n              <validation-observer ref=\"observer\" v-slot=\"{ invalid }\">\n                <form @submit.prevent=\"submit\">\n                  <v-row>\n                    <v-col cols=\"12\">\n                      <validation-provider\n                        v-slot=\"{ errors }\"\n                        name=\"nom\"\n                        :error-messages=\"errors\"\n                        rules=\"required|min:8\"\n                      >\n                        <v-text-field label=\"Nom*\" v-model=\"nom\" required>\n                        </v-text-field>\n                      </validation-provider>\n                    </v-col>\n                    <v-col cols=\"12\">\n                      <validation-provider\n                        v-slot=\"{ errors }\"\n                        name=\"nom\"\n                        rules=\"required|min:8\"\n                      >\n                        <v-text-field\n                          rules=\"required|min:8\"\n                          label=\"Password*\"\n                          :error-messages=\"errors\"\n                          type=\"password\"\n                          required\n                        ></v-text-field>\n                      </validation-provider>\n                    </v-col>\n                  </v-row>\n                </form>\n              </validation-observer>\n            </v-container>\n            <small>* c-a-d champ est obligatoir</small>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"blue darken-1\" text @click=\"dialog = false\">\n              Close\n            </v-btn>\n            <v-btn color=\"blue darken-1\" text :disabled=\"invalid\" @click=\"dialog = false\">\n              Save\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-row>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"orgList\"\n      :items-per-page=\"5\"\n      class=\"elevation-1 mx-3 my-3\"\n    >\n      <!-- eslint-disable-next-line vue/valid-v-slot -->\n      <template v-slot:item.actions=\"{ item }\">\n        <v-icon small class=\"mr-2\" @click=\"editItem(item)\"> mdi-pencil </v-icon>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\n\nimport { required, min } from \"vee-validate/dist/rules\";\nimport { extend, ValidationObserver, ValidationProvider } from \"vee-validate\";\nextend(\"required\", {\n  ...required,\n  message: \"le champe {_field_} est obligatiore\",\n});\n\nextend(\"min\", {\n  ...min,\n  message: \"le champe {_field_} ne doit pas etre moin de {length} characters\",\n});\nexport default {\n    components:{\n        ValidationObserver,\n        ValidationProvider\n    },\n  data: () => ({\n    headers: [\n      {\n        text: \"Identification\",\n        align: \"start\",\n        sortable: true,\n        value: \"_id\",\n      },\n      { text: \"Name\", sortable: true, value: \"name\" },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n  }),\n  mounted: function () {\n    this.$store.dispatch(\"fetchOrgs\");\n    this.orgList = this.$store.state.orgNames.data;\n  },\n  computed: {\n    orgList: {\n      get() {\n        return this.$store.state.orgNames.data;\n      },\n      set(newValue) {\n        this.$store.commit(\"updateOrgList\", newValue);\n      },\n    },\n  },\n  methods: {\n    editItem(item) {\n      let editedItem = Object.assign({}, item);\n      this.$store.dispatch(\"setCurrentOrg\", item);\n      this.$router.push(`orgs/${editedItem._id}`);\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";AA+EA,SAAAA,QAAA,EAAAC,GAAA;AACA,SAAAC,MAAA,EAAAC,kBAAA,EAAAC,kBAAA;AACAF,MAAA;EACA,GAAAF,QAAA;EACAK,OAAA;AACA;AAEAH,MAAA;EACA,GAAAD,GAAA;EACAI,OAAA;AACA;AACA;EACAC,UAAA;IACAH,kBAAA;IACAC;EACA;EACAG,IAAA,EAAAA,CAAA;IACAC,OAAA,GACA;MACAC,IAAA;MACAC,KAAA;MACAC,QAAA;MACAC,KAAA;IACA,GACA;MAAAH,IAAA;MAAAE,QAAA;MAAAC,KAAA;IAAA,GACA;MAAAH,IAAA;MAAAG,KAAA;MAAAD,QAAA;IAAA;EAEA;EACAE,OAAA,WAAAA,CAAA;IACA,KAAAC,MAAA,CAAAC,QAAA;IACA,KAAAC,OAAA,QAAAF,MAAA,CAAAG,KAAA,CAAAC,QAAA,CAAAX,IAAA;EACA;EACAY,QAAA;IACAH,OAAA;MACAI,IAAA;QACA,YAAAN,MAAA,CAAAG,KAAA,CAAAC,QAAA,CAAAX,IAAA;MACA;MACAc,IAAAC,QAAA;QACA,KAAAR,MAAA,CAAAS,MAAA,kBAAAD,QAAA;MACA;IACA;EACA;EACAE,OAAA;IACAC,SAAAC,IAAA;MACA,IAAAC,UAAA,GAAAC,MAAA,CAAAC,MAAA,KAAAH,IAAA;MACA,KAAAZ,MAAA,CAAAC,QAAA,kBAAAW,IAAA;MACA,KAAAI,OAAA,CAAAC,IAAA,SAAAJ,UAAA,CAAAK,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}