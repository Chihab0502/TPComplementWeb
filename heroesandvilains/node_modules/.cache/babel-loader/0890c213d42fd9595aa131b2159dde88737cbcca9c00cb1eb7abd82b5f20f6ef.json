{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, min } from \"vee-validate/dist/rules\";\nimport { extend, ValidationObserver, ValidationProvider, setInteractionMode } from \"vee-validate\";\nsetInteractionMode(\"eager\");\nextend(\"required\", {\n  ...required,\n  message: \"le champe {_field_} est obligatiore\"\n});\nextend(\"min\", {\n  ...min,\n  message: \"le champe {_field_} ne doit pas etre moin de {length} characters\"\n});\nexport default {\n  components: {\n    ValidationObserver,\n    ValidationProvider\n  },\n  data: () => ({\n    org: null,\n    nom: null,\n    teams: [],\n    allTeams: [],\n    dialog: false,\n    teamsHeders: [{\n      text: \"Identification\",\n      align: \"start\",\n      sortable: true,\n      value: \"_id\"\n    }, {\n      text: \"Name\",\n      sortable: true,\n      value: \"name\"\n    }, {\n      text: \"Actions\",\n      value: \"actions\",\n      sortable: false\n    }]\n  }),\n  mounted: async function () {\n    this.getOrgData();\n  },\n  methods: {\n    async getOrgData() {\n      this.org = await this.$store.dispatch(\"fetchOrgById\", {\n        id: this.$route.params.id\n      });\n      this.teams = this.org.data[0].teams;\n    },\n    auth() {\n      this.$router.push(\"/orgs\");\n    },\n    async deleteItem(item) {\n      if (confirm(\"tu veux supprimer la team\")) {\n        let deleteItem = Object.assign({}, item);\n        await this.$store.dispatch(\"updateOrgRemoveTeam\", {\n          idTeam: deleteItem._id\n        });\n        this.dialog = false;\n        this.org = null;\n        this.teams = null;\n        this.getOrgData();\n      }\n    },\n    async submit() {\n      if (!this.$refs.observer.validate()) {\n        return;\n      }\n      const response = await this.$store.dispatch(\"createTeam\", {\n        teamName: this.nom\n      });\n      await this.$store.dispatch(\"updateOrgAddTeam\", {\n        idTeam: response.data._id\n      });\n      this.dialog = false;\n      this.org = null;\n      this.teams = null;\n      this.getOrgData();\n    },\n    teamDetails(item) {\n      let editedItem = Object.assign({}, item);\n      this.$store.dispatch(\"setCurrentTeam\", item);\n      this.$router.push(`/teams/${editedItem._id}`);\n    }\n  }\n};","map":{"version":3,"names":["required","min","extend","ValidationObserver","ValidationProvider","setInteractionMode","message","components","data","org","nom","teams","allTeams","dialog","teamsHeders","text","align","sortable","value","mounted","getOrgData","methods","$store","dispatch","id","$route","params","auth","$router","push","deleteItem","item","confirm","Object","assign","idTeam","_id","submit","$refs","observer","validate","response","teamName","teamDetails","editedItem"],"sources":["src/components/OrgDetailsComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"org && org.data !== null\">\n      <v-row justify=\"center\">\n        <v-dialog v-model=\"dialog\" persistent max-width=\"600px\">\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-btn class=\"mt-5\" color=\"primary\" dark v-bind=\"attrs\" v-on=\"on\">\n              Ajouter Team\n            </v-btn>\n          </template>\n          <v-card>\n            <validation-observer ref=\"observer\" v-slot=\"{ invalid }\">\n              <form @submit.prevent=\"submit\">\n                <v-card-title>\n                  <span class=\"text-h5\">Team information</span>\n                </v-card-title>\n                <v-card-text>\n                  <v-container>\n                    <!--eslint-disable-next-line-->\n\n                    <v-row>\n                      <v-col cols=\"12\">\n                        <validation-provider\n                          v-slot=\"{ errors }\"\n                          name=\"nom\"\n                          rules=\"required|min:8\"\n                        >\n                          <v-text-field\n                            label=\"Nom*\"\n                            :error-messages=\"errors\"\n                            v-model=\"nom\"\n                            required\n                          >\n                          </v-text-field>\n                        </validation-provider>\n                      </v-col>\n                    </v-row>\n                  </v-container>\n                  <small>* c-a-d champ est obligatoir</small>\n                </v-card-text>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"blue darken-1\" text @click=\"dialog = false\">\n                    Close\n                  </v-btn>\n                  <v-btn\n                    type=\"submit\"\n                    :disabled=\"invalid\"\n                    color=\"blue darken-1\"\n                    text\n                  >\n                    Save\n                  </v-btn>\n                </v-card-actions>\n              </form>\n            </validation-observer>\n          </v-card>\n        </v-dialog>\n      </v-row>\n\n      <v-data-table\n        v-if=\"org\"\n        :headers=\"teamsHeders\"\n        :items=\"teams\"\n        :items-per-page=\"5\"\n        class=\"elevation-1 mx-3 my-3 mt-5\"\n      >\n        <!-- eslint-disable-next-line vue/valid-v-slot -->\n        <template v-slot:item.actions=\"{ item }\">\n          <v-icon small class=\"mr-2\" @click=\"teamDetails(item)\">\n            mdi-pencil\n          </v-icon>\n          <v-icon small @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n        </template>\n      </v-data-table>\n    </div>\n    <v-sheet v-else class=\"mx-auto\" width=\"300\">\n      <v-skeleton-loader\n        class=\"mx-auto mt-5\"\n        max-width=\"300\"\n        type=\"card\"\n      ></v-skeleton-loader>\n      <v-btn @click=\"auth()\" depressed color=\"primary\"> Ok</v-btn>\n    </v-sheet>\n  </div>\n</template>\n\n<script>\nimport { required, min } from \"vee-validate/dist/rules\";\nimport {\n  extend,\n  ValidationObserver,\n  ValidationProvider,\n  setInteractionMode,\n} from \"vee-validate\";\nsetInteractionMode(\"eager\");\n\nextend(\"required\", {\n  ...required,\n  message: \"le champe {_field_} est obligatiore\",\n});\n\nextend(\"min\", {\n  ...min,\n  message: \"le champe {_field_} ne doit pas etre moin de {length} characters\",\n});\n\nexport default {\n  components: {\n    ValidationObserver,\n    ValidationProvider,\n  },\n  data: () => ({\n    org: null,\n    nom: null,\n    teams: [],\n    allTeams:[],\n    dialog: false,\n    teamsHeders: [\n      {\n        text: \"Identification\",\n        align: \"start\",\n        sortable: true,\n        value: \"_id\",\n      },\n      { text: \"Name\", sortable: true, value: \"name\" },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n  }),\n\n  mounted: async function () {\n    this.getOrgData();\n  },\n  methods: {\n    async getOrgData() {\n      this.org = await this.$store.dispatch(\"fetchOrgById\", {\n        id: this.$route.params.id,\n      });\n\n      this.teams = this.org.data[0].teams;\n    },\n    auth() {\n      this.$router.push(\"/orgs\");\n    },\n    async deleteItem(item) {\n      if (confirm(\"tu veux supprimer la team\")) {\n        let deleteItem = Object.assign({}, item);\n        await this.$store.dispatch(\"updateOrgRemoveTeam\", {\n          idTeam: deleteItem._id,\n        });\n        this.dialog = false;\n        this.org = null;\n        this.teams = null;\n        this.getOrgData();\n      }\n    },\n    async submit() {\n      if (!this.$refs.observer.validate()) {\n        return;\n      }\n      const response = await this.$store.dispatch(\"createTeam\", {\n        teamName: this.nom,\n      });\n\n      await this.$store.dispatch(\"updateOrgAddTeam\", {\n        idTeam: response.data._id,\n      });\n      this.dialog = false;\n      this.org = null;\n      this.teams = null;\n      this.getOrgData();\n    },\n    teamDetails(item) {\n      let editedItem = Object.assign({}, item);\n      this.$store.dispatch(\"setCurrentTeam\", item);\n      this.$router.push(`/teams/${editedItem._id}`);\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";AAwFA,SAAAA,QAAA,EAAAC,GAAA;AACA,SACAC,MAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,kBAAA,QACA;AACAA,kBAAA;AAEAH,MAAA;EACA,GAAAF,QAAA;EACAM,OAAA;AACA;AAEAJ,MAAA;EACA,GAAAD,GAAA;EACAK,OAAA;AACA;AAEA;EACAC,UAAA;IACAJ,kBAAA;IACAC;EACA;EACAI,IAAA,EAAAA,CAAA;IACAC,GAAA;IACAC,GAAA;IACAC,KAAA;IACAC,QAAA;IACAC,MAAA;IACAC,WAAA,GACA;MACAC,IAAA;MACAC,KAAA;MACAC,QAAA;MACAC,KAAA;IACA,GACA;MAAAH,IAAA;MAAAE,QAAA;MAAAC,KAAA;IAAA,GACA;MAAAH,IAAA;MAAAG,KAAA;MAAAD,QAAA;IAAA;EAEA;EAEAE,OAAA,iBAAAA,CAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACA,MAAAD,WAAA;MACA,KAAAX,GAAA,cAAAa,MAAA,CAAAC,QAAA;QACAC,EAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF;MACA;MAEA,KAAAb,KAAA,QAAAF,GAAA,CAAAD,IAAA,IAAAG,KAAA;IACA;IACAgB,KAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACA,MAAAC,WAAAC,IAAA;MACA,IAAAC,OAAA;QACA,IAAAF,UAAA,GAAAG,MAAA,CAAAC,MAAA,KAAAH,IAAA;QACA,WAAAT,MAAA,CAAAC,QAAA;UACAY,MAAA,EAAAL,UAAA,CAAAM;QACA;QACA,KAAAvB,MAAA;QACA,KAAAJ,GAAA;QACA,KAAAE,KAAA;QACA,KAAAS,UAAA;MACA;IACA;IACA,MAAAiB,OAAA;MACA,UAAAC,KAAA,CAAAC,QAAA,CAAAC,QAAA;QACA;MACA;MACA,MAAAC,QAAA,cAAAnB,MAAA,CAAAC,QAAA;QACAmB,QAAA,OAAAhC;MACA;MAEA,WAAAY,MAAA,CAAAC,QAAA;QACAY,MAAA,EAAAM,QAAA,CAAAjC,IAAA,CAAA4B;MACA;MACA,KAAAvB,MAAA;MACA,KAAAJ,GAAA;MACA,KAAAE,KAAA;MACA,KAAAS,UAAA;IACA;IACAuB,YAAAZ,IAAA;MACA,IAAAa,UAAA,GAAAX,MAAA,CAAAC,MAAA,KAAAH,IAAA;MACA,KAAAT,MAAA,CAAAC,QAAA,mBAAAQ,IAAA;MACA,KAAAH,OAAA,CAAAC,IAAA,WAAAe,UAAA,CAAAR,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}