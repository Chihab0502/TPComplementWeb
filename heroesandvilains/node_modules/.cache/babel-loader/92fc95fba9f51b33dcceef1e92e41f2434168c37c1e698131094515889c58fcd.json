{"ast":null,"code":"import axios from \"axios\";\nimport Vue from \"vue/types/umd\";\n\n// créer une instance personnalisée d'Axios\nconst axiosAgent = axios.create({\n  baseURL: \"https://apidemo.iut-bm.univ-fcomte.fr/apidemo\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// méthode de traitement des erreurs\nconst handleError = error => {\n  Vue.prototype.$bvAlert.show({\n    variant: \"error\",\n    text: error.response ? error.response.data.message : \"Une erreur réseau est survenue.\"\n  });\n};\n\n// méthode générique pour les requêtes GET\nconst get = url => {\n  return axiosAgent.get(url).then(response => response.data).catch(handleError);\n};\n\n// méthode générique pour les requêtes POST\nconst post = (url, data) => {\n  return axiosAgent.post(url, data).then(response => response.data).catch(handleError);\n};\n\n// méthode générique pour les requêtes PUT\nconst put = (url, data) => {\n  return axiosAgent.put(url, data).then(response => response.data).catch(handleError);\n};\nexport default {\n  get,\n  post,\n  put\n};","map":{"version":3,"names":["axios","Vue","axiosAgent","create","baseURL","headers","handleError","error","prototype","$bvAlert","show","variant","text","response","data","message","get","url","then","catch","post","put"],"sources":["/Users/othmancharai/Documents/Othman_Charai/my-vue-2-project/src/services/axios.service.js"],"sourcesContent":["import axios from \"axios\";\nimport Vue from \"vue/types/umd\";\n\n// créer une instance personnalisée d'Axios\nconst axiosAgent = axios.create({\n  baseURL: \"https://apidemo.iut-bm.univ-fcomte.fr/apidemo\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// méthode de traitement des erreurs\nconst handleError = (error) => {\n  Vue.prototype.$bvAlert.show({\n    variant: \"error\",\n    text: error.response\n      ? error.response.data.message\n      : \"Une erreur réseau est survenue.\",\n  });\n};\n\n// méthode générique pour les requêtes GET\nconst get = (url) => {\n  return axiosAgent\n    .get(url)\n    .then((response) => response.data)\n    .catch(handleError);\n};\n\n// méthode générique pour les requêtes POST\nconst post = (url, data) => {\n  return axiosAgent\n    .post(url, data)\n    .then((response) => response.data)\n    .catch(handleError);\n};\n\n// méthode générique pour les requêtes PUT\nconst put = (url, data) => {\n  return axiosAgent\n    .put(url, data)\n    .then((response) => response.data)\n    .catch(handleError);\n};\n\nexport default {\n  get,\n  post,\n  put,\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,eAAe;;AAE/B;AACA,MAAMC,UAAU,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC9BC,OAAO,EAAE,+CAA+C;EACxDC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7BN,GAAG,CAACO,SAAS,CAACC,QAAQ,CAACC,IAAI,CAAC;IAC1BC,OAAO,EAAE,OAAO;IAChBC,IAAI,EAAEL,KAAK,CAACM,QAAQ,GAChBN,KAAK,CAACM,QAAQ,CAACC,IAAI,CAACC,OAAO,GAC3B;EACN,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMC,GAAG,GAAIC,GAAG,IAAK;EACnB,OAAOf,UAAU,CACdc,GAAG,CAACC,GAAG,CAAC,CACRC,IAAI,CAAEL,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCK,KAAK,CAACb,WAAW,CAAC;AACvB,CAAC;;AAED;AACA,MAAMc,IAAI,GAAGA,CAACH,GAAG,EAAEH,IAAI,KAAK;EAC1B,OAAOZ,UAAU,CACdkB,IAAI,CAACH,GAAG,EAAEH,IAAI,CAAC,CACfI,IAAI,CAAEL,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCK,KAAK,CAACb,WAAW,CAAC;AACvB,CAAC;;AAED;AACA,MAAMe,GAAG,GAAGA,CAACJ,GAAG,EAAEH,IAAI,KAAK;EACzB,OAAOZ,UAAU,CACdmB,GAAG,CAACJ,GAAG,EAAEH,IAAI,CAAC,CACdI,IAAI,CAAEL,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCK,KAAK,CAACb,WAAW,CAAC;AACvB,CAAC;AAED,eAAe;EACbU,GAAG;EACHI,IAAI;EACJC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}