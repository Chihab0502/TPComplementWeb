{"ast":null,"code":"import axios from \"axios\";\nimport { eventBus } from \"./../utilits/eventBus\";\n\n// créer une instance personnalisée d'Axios\nconst axiosAgent = axios.create({\n  baseURL: \"https://apidemo.iut-bm.univ-fcomte.fr/herocorp\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// méthode de traitement des erreurs\nconst handleError = error => {\n  const errorMessage = error.response ? error.response.data.data : \"Une erreur réseau est survenue.\";\n  eventBus.$emit('show-snackbar', errorMessage);\n};\n\n// méthode générique pour les requêtes GET\nconst get = url => {\n  return axiosAgent.get(url).then(response => response.data).catch(handleError);\n};\n\n// méthode générique pour les requêtes POST\nconst post = (url, data) => {\n  return axiosAgent.post(url, data).then(response => response.data).catch(handleError);\n};\n\n// méthode générique pour les requêtes PUT\nconst put = (url, data) => {\n  return axiosAgent.put(url, data).then(response => response.data).catch(handleError);\n};\nconst patch = (url, data) => {\n  return axiosAgent.patch(url, data).then(response => response.data).catch(handleError);\n};\nexport default {\n  get,\n  post,\n  put,\n  patch\n};","map":{"version":3,"names":["axios","eventBus","axiosAgent","create","baseURL","headers","handleError","error","errorMessage","response","data","$emit","get","url","then","catch","post","put","patch"],"sources":["/Users/othmancharai/Documents/Othman_Charai/my-vue-2-project/src/services/axios.service.js"],"sourcesContent":["import axios from \"axios\";\nimport {eventBus} from \"./../utilits/eventBus\"\n\n// créer une instance personnalisée d'Axios\nconst axiosAgent = axios.create({\n  baseURL: \"https://apidemo.iut-bm.univ-fcomte.fr/herocorp\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// méthode de traitement des erreurs\nconst handleError = (error) => {\n  const errorMessage = error.response\n    ? error.response.data.data\n    : \"Une erreur réseau est survenue.\";\n\n    eventBus.$emit('show-snackbar', errorMessage);\n};\n\n// méthode générique pour les requêtes GET\nconst get = (url) => {\n  return axiosAgent\n    .get(url)\n    .then((response) => response.data)\n    .catch(handleError);\n};\n\n// méthode générique pour les requêtes POST\nconst post = (url, data) => {\n  return axiosAgent\n    .post(url, data)\n    .then((response) => response.data)\n    .catch(handleError);\n};\n\n// méthode générique pour les requêtes PUT\nconst put = (url, data) => {\n  return axiosAgent\n    .put(url, data)\n    .then((response) => response.data)\n    .catch(handleError);\n};\n\nconst patch = (url, data) => {\n  return axiosAgent\n    .patch(url, data)\n    .then((response) => response.data)\n    .catch(handleError);\n};\n\nexport default {\n  get,\n  post,\n  put,\n  patch\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,uBAAuB;;AAE9C;AACA,MAAMC,UAAU,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC9BC,OAAO,EAAE,gDAAgD;EACzDC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAMC,YAAY,GAAGD,KAAK,CAACE,QAAQ,GAC/BF,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACA,IAAI,GACxB,iCAAiC;EAEnCT,QAAQ,CAACU,KAAK,CAAC,eAAe,EAAEH,YAAY,CAAC;AACjD,CAAC;;AAED;AACA,MAAMI,GAAG,GAAIC,GAAG,IAAK;EACnB,OAAOX,UAAU,CACdU,GAAG,CAACC,GAAG,CAAC,CACRC,IAAI,CAAEL,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCK,KAAK,CAACT,WAAW,CAAC;AACvB,CAAC;;AAED;AACA,MAAMU,IAAI,GAAGA,CAACH,GAAG,EAAEH,IAAI,KAAK;EAC1B,OAAOR,UAAU,CACdc,IAAI,CAACH,GAAG,EAAEH,IAAI,CAAC,CACfI,IAAI,CAAEL,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCK,KAAK,CAACT,WAAW,CAAC;AACvB,CAAC;;AAED;AACA,MAAMW,GAAG,GAAGA,CAACJ,GAAG,EAAEH,IAAI,KAAK;EACzB,OAAOR,UAAU,CACde,GAAG,CAACJ,GAAG,EAAEH,IAAI,CAAC,CACdI,IAAI,CAAEL,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCK,KAAK,CAACT,WAAW,CAAC;AACvB,CAAC;AAED,MAAMY,KAAK,GAAGA,CAACL,GAAG,EAAEH,IAAI,KAAK;EAC3B,OAAOR,UAAU,CACdgB,KAAK,CAACL,GAAG,EAAEH,IAAI,CAAC,CAChBI,IAAI,CAAEL,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCK,KAAK,CAACT,WAAW,CAAC;AACvB,CAAC;AAED,eAAe;EACbM,GAAG;EACHI,IAAI;EACJC,GAAG;EACHC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}