{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, min } from \"vee-validate/dist/rules\";\nimport { extend, ValidationObserver, ValidationProvider, setInteractionMode } from \"vee-validate\";\nsetInteractionMode(\"eager\");\nextend(\"required\", {\n  ...required,\n  message: \"le champe {_field_} est obligatiore\"\n});\nextend(\"min\", {\n  ...min,\n  message: \"le champe {_field_} ne doit pas etre moin de {length} characters\"\n});\nexport default {\n  comments: {\n    ValidationObserver,\n    ValidationProvider\n  },\n  data: () => ({\n    nom: null,\n    secret: null\n  }),\n  mounted: function () {\n    this.$store.dispatch(\"fetchOrgById\", {\n      id: this.$route.params.id\n    });\n  },\n  methods: {\n    auth() {\n      this.$router.push('/orgs');\n    }\n  },\n  computed: {\n    org: {\n      get() {\n        return this.$store.state.org;\n      },\n      set(newValue) {\n        this.$store.commit(\"updateOrgList\", newValue);\n      }\n    },\n    org: {\n      get() {\n        return this.$store.state.org;\n      },\n      set(newValue) {\n        this.$store.commit(\"updateOrgList\", newValue);\n      }\n    },\n    nom: {\n      get() {\n        return this.org ? this.org.nom : '';\n      },\n      set(newValue) {\n        this.$store.commit('updateOrgNom', newValue);\n      }\n    },\n    secret: {\n      get() {\n        return this.org ? this.org.secret : '';\n      },\n      set(newValue) {\n        this.$store.commit('updateOrgSecret', newValue);\n      }\n    }\n  }\n};","map":{"version":3,"names":["required","min","extend","ValidationObserver","ValidationProvider","setInteractionMode","message","comments","data","nom","secret","mounted","$store","dispatch","id","$route","params","methods","auth","$router","push","computed","org","get","state","set","newValue","commit"],"sources":["src/components/OrgDetailsComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <v-sheet class=\"mx-auto\" width=\"300\">\n      <validation-observer v-if='org' ref=\"observer\" v-slot=\"{ invalid }\">\n            <form @submit.prevent=\"submit\">\n              <v-card-title>\n                <span class=\"text-h5\">Organisation information</span>\n              </v-card-title>\n              <v-card-text>\n                <v-container>\n                  <!--eslint-disable-next-line-->\n\n                  <v-row>\n                    <v-col cols=\"12\">\n                      <validation-provider\n                        v-slot=\"{ errors }\"\n                        name=\"nom\"\n                        rules=\"required|min:8\"\n                      >\n                        <v-text-field\n                          label=\"Nom*\"\n                          :error-messages=\"errors\"\n                          v-model=\"nom\"\n                          required\n                        >\n                        </v-text-field>\n                      </validation-provider>\n                    </v-col>\n                    <v-col cols=\"12\">\n                      <validation-provider\n                        v-slot=\"{ errors }\"\n                        name=\"secret\"\n                        rules=\"required|min:8\"\n                      >\n                        <v-text-field\n                          v-model=\"secret\"\n                          label=\"La phrase secrÃ¨te*\"\n                          :error-messages=\"errors\"\n                          type=\"password\"\n                          required\n                        ></v-text-field>\n                      </validation-provider>\n                    </v-col>\n                  </v-row>\n                </v-container>\n                <small>* c-a-d champ est obligatoir</small>\n              </v-card-text>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"dialog = false\">\n                  Close\n                </v-btn>\n                <v-btn\n                  type=\"submit\"\n                  :disabled=\"invalid\"\n                  color=\"blue darken-1\"\n                  text\n                >\n                  Save\n                </v-btn>\n              </v-card-actions>\n            </form>\n          </validation-observer>\n      <v-skeleton-loader\n        v-else\n        class=\"mx-auto mt-5\"\n        max-width=\"300\"\n        type=\"card\"\n      ></v-skeleton-loader>\n      <v-btn @click=\"auth()\" depressed color=\"primary\"> Ok</v-btn>\n    </v-sheet>\n  </div>\n</template>\n\n<script>\nimport { required, min } from \"vee-validate/dist/rules\";\nimport {\n  extend,\n  ValidationObserver,\n  ValidationProvider,\n  setInteractionMode,\n} from \"vee-validate\";\nsetInteractionMode(\"eager\");\n\nextend(\"required\", {\n  ...required,\n  message: \"le champe {_field_} est obligatiore\",\n});\n\nextend(\"min\", {\n  ...min,\n  message: \"le champe {_field_} ne doit pas etre moin de {length} characters\",\n});\n\nexport default {\n  comments:{\n    ValidationObserver,\n    ValidationProvider,\n  },\n  data: () => ({\n     nom: null,\n    secret: null,\n  }),\n  mounted: function () {\n    this.$store.dispatch(\"fetchOrgById\", {\n      id: this.$route.params.id,\n    });\n  },\n  methods:{\n    auth(){\n        this.$router.push('/orgs');\n    }\n  },\n  computed: {\n    org: {\n      get() {\n        return this.$store.state.org;\n      },\n      set(newValue) {\n        this.$store.commit(\"updateOrgList\", newValue);\n      },\n    },\n    org: {\n      get() {\n        return this.$store.state.org;\n      },\n      set(newValue) {\n        this.$store.commit(\"updateOrgList\", newValue);\n      },\n    },\n    nom: {\n      get() {\n        return this.org ? this.org.nom : '';\n      },\n      set(newValue) {\n        this.$store.commit('updateOrgNom', newValue);\n      }\n    },\n    secret: {\n      get() {\n        return this.org ? this.org.secret : '';\n      },\n      set(newValue) {\n        this.$store.commit('updateOrgSecret', newValue);\n      }\n    }\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";AA2EA,SAAAA,QAAA,EAAAC,GAAA;AACA,SACAC,MAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,kBAAA,QACA;AACAA,kBAAA;AAEAH,MAAA;EACA,GAAAF,QAAA;EACAM,OAAA;AACA;AAEAJ,MAAA;EACA,GAAAD,GAAA;EACAK,OAAA;AACA;AAEA;EACAC,QAAA;IACAJ,kBAAA;IACAC;EACA;EACAI,IAAA,EAAAA,CAAA;IACAC,GAAA;IACAC,MAAA;EACA;EACAC,OAAA,WAAAA,CAAA;IACA,KAAAC,MAAA,CAAAC,QAAA;MACAC,EAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF;IACA;EACA;EACAG,OAAA;IACAC,KAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;EACAC,QAAA;IACAC,GAAA;MACAC,IAAA;QACA,YAAAX,MAAA,CAAAY,KAAA,CAAAF,GAAA;MACA;MACAG,IAAAC,QAAA;QACA,KAAAd,MAAA,CAAAe,MAAA,kBAAAD,QAAA;MACA;IACA;IACAJ,GAAA;MACAC,IAAA;QACA,YAAAX,MAAA,CAAAY,KAAA,CAAAF,GAAA;MACA;MACAG,IAAAC,QAAA;QACA,KAAAd,MAAA,CAAAe,MAAA,kBAAAD,QAAA;MACA;IACA;IACAjB,GAAA;MACAc,IAAA;QACA,YAAAD,GAAA,QAAAA,GAAA,CAAAb,GAAA;MACA;MACAgB,IAAAC,QAAA;QACA,KAAAd,MAAA,CAAAe,MAAA,iBAAAD,QAAA;MACA;IACA;IACAhB,MAAA;MACAa,IAAA;QACA,YAAAD,GAAA,QAAAA,GAAA,CAAAZ,MAAA;MACA;MACAe,IAAAC,QAAA;QACA,KAAAd,MAAA,CAAAe,MAAA,oBAAAD,QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}