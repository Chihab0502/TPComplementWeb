{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, min } from \"vee-validate/dist/rules\";\nimport { extend, ValidationObserver, ValidationProvider, setInteractionMode } from \"vee-validate\";\nsetInteractionMode(\"eager\");\nextend(\"required\", {\n  ...required,\n  message: \"le champe {_field_} est obligatiore\"\n});\nextend(\"min\", {\n  ...min,\n  message: \"le champe {_field_} ne doit pas etre moin de {length} characters\"\n});\nexport default {\n  components: {\n    ValidationObserver,\n    ValidationProvider\n  },\n  data: () => ({\n    dialog: false,\n    nom: null,\n    secret: null,\n    headers: [{\n      text: \"Identification\",\n      align: \"start\",\n      sortable: true,\n      value: \"_id\"\n    }, {\n      text: \"Name\",\n      sortable: true,\n      value: \"name\"\n    }, {\n      text: \"Actions\",\n      value: \"actions\",\n      sortable: false\n    }]\n  }),\n  mounted: async function () {\n    this.orgList = await this.$store.dispatch(\"fetchOrgs\");\n  },\n  computed: {\n    orgList: {\n      get() {\n        return this.$store.state.orgNames.data;\n      },\n      set(newValue) {\n        this.$store.commit(\"updateOrgList\", newValue);\n      }\n    }\n  },\n  methods: {\n    editItem(item) {\n      let editedItem = Object.assign({}, item);\n      this.$store.dispatch(\"setCurrentOrg\", item);\n      this.$router.push(`orgs/${editedItem._id}`);\n    },\n    submit() {\n      this.$refs.observer.validate();\n      this.$store.dispatch(\"createOrg\", {\n        name: this.nom,\n        password: this.secret\n      });\n      this.dialog = false;\n    },\n    clear() {\n      this.secret = \"\";\n      this.nom = \"\";\n      this.$refs.observer.reset();\n    }\n  }\n};","map":{"version":3,"names":["required","min","extend","ValidationObserver","ValidationProvider","setInteractionMode","message","components","data","dialog","nom","secret","headers","text","align","sortable","value","mounted","orgList","$store","dispatch","computed","get","state","orgNames","set","newValue","commit","methods","editItem","item","editedItem","Object","assign","$router","push","_id","submit","$refs","observer","validate","name","password","clear","reset"],"sources":["src/components/OrgListComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <v-row justify=\"center\">\n      <v-dialog v-model=\"dialog\" persistent max-width=\"600px\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn class=\"mt-5\" color=\"primary\" dark v-bind=\"attrs\" v-on=\"on\">\n            Ajouter Organisations\n          </v-btn>\n        </template>\n        <v-card>\n          <validation-observer ref=\"observer\" v-slot=\"{ invalid }\">\n            <form @submit.prevent=\"submit\">\n              <v-card-title>\n                <span class=\"text-h5\">Organisation information</span>\n              </v-card-title>\n              <v-card-text>\n                <v-container>\n                  <!--eslint-disable-next-line-->\n\n                  <v-row>\n                    <v-col cols=\"12\">\n                      <validation-provider\n                        v-slot=\"{ errors }\"\n                        name=\"nom\"\n                        rules=\"required|min:8\"\n                      >\n                        <v-text-field\n                          label=\"Nom*\"\n                          :error-messages=\"errors\"\n                          v-model=\"nom\"\n                          required\n                        >\n                        </v-text-field>\n                      </validation-provider>\n                    </v-col>\n                    <v-col cols=\"12\">\n                      <validation-provider\n                        v-slot=\"{ errors }\"\n                        name=\"secret\"\n                        rules=\"required|min:8\"\n                      >\n                        <v-text-field\n                          v-model=\"secret\"\n                          label=\"La phrase secrÃ¨te*\"\n                          :error-messages=\"errors\"\n                          type=\"password\"\n                          required\n                        ></v-text-field>\n                      </validation-provider>\n                    </v-col>\n                  </v-row>\n                </v-container>\n                <small>* c-a-d champ est obligatoir</small>\n              </v-card-text>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"dialog = false\">\n                  Close\n                </v-btn>\n                <v-btn\n                  type=\"submit\"\n                  :disabled=\"invalid\"\n                  color=\"blue darken-1\"\n                  text\n                >\n                  Save\n                </v-btn>\n              </v-card-actions>\n            </form>\n          </validation-observer>\n        </v-card>\n      </v-dialog>\n    </v-row>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"orgList\"\n      :items-per-page=\"5\"\n      class=\"elevation-1 mx-3 my-3\"\n    >\n      <!-- eslint-disable-next-line vue/valid-v-slot -->\n      <template v-slot:item.actions=\"{ item }\">\n        <v-icon small class=\"mr-2\" @click=\"editItem(item)\"> mdi-pencil </v-icon>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\nimport { required, min } from \"vee-validate/dist/rules\";\nimport {\n  extend,\n  ValidationObserver,\n  ValidationProvider,\n  setInteractionMode,\n} from \"vee-validate\";\nsetInteractionMode(\"eager\");\n\nextend(\"required\", {\n  ...required,\n  message: \"le champe {_field_} est obligatiore\",\n});\n\nextend(\"min\", {\n  ...min,\n  message: \"le champe {_field_} ne doit pas etre moin de {length} characters\",\n});\nexport default {\n  components: {\n    ValidationObserver,\n    ValidationProvider,\n  },\n  data: () => ({\n    dialog: false,\n\n    nom: null,\n    secret: null,\n    headers: [\n      {\n        text: \"Identification\",\n        align: \"start\",\n        sortable: true,\n        value: \"_id\",\n      },\n      { text: \"Name\", sortable: true, value: \"name\" },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n  }),\n  mounted: async function () {\n    this.orgList=await this.$store.dispatch(\"fetchOrgs\");\n  },\n  computed: {\n    orgList: {\n      get() {\n        return this.$store.state.orgNames.data;\n      },\n      set(newValue) {\n        this.$store.commit(\"updateOrgList\", newValue);\n      },\n    },\n  },\n  methods: {\n    editItem(item) {\n      let editedItem = Object.assign({}, item);\n      this.$store.dispatch(\"setCurrentOrg\", item);\n      this.$router.push(`orgs/${editedItem._id}`);\n    },\n    submit() {\n      this.$refs.observer.validate();\n      this.$store.dispatch(\"createOrg\", {\n        name: this.nom,\n        password: this.secret,\n      });\n\n      this.dialog=false;\n    },\n    clear() {\n      this.secret = \"\";\n      this.nom = \"\";\n      this.$refs.observer.reset();\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";AAwFA,SAAAA,QAAA,EAAAC,GAAA;AACA,SACAC,MAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,kBAAA,QACA;AACAA,kBAAA;AAEAH,MAAA;EACA,GAAAF,QAAA;EACAM,OAAA;AACA;AAEAJ,MAAA;EACA,GAAAD,GAAA;EACAK,OAAA;AACA;AACA;EACAC,UAAA;IACAJ,kBAAA;IACAC;EACA;EACAI,IAAA,EAAAA,CAAA;IACAC,MAAA;IAEAC,GAAA;IACAC,MAAA;IACAC,OAAA,GACA;MACAC,IAAA;MACAC,KAAA;MACAC,QAAA;MACAC,KAAA;IACA,GACA;MAAAH,IAAA;MAAAE,QAAA;MAAAC,KAAA;IAAA,GACA;MAAAH,IAAA;MAAAG,KAAA;MAAAD,QAAA;IAAA;EAEA;EACAE,OAAA,iBAAAA,CAAA;IACA,KAAAC,OAAA,cAAAC,MAAA,CAAAC,QAAA;EACA;EACAC,QAAA;IACAH,OAAA;MACAI,IAAA;QACA,YAAAH,MAAA,CAAAI,KAAA,CAAAC,QAAA,CAAAhB,IAAA;MACA;MACAiB,IAAAC,QAAA;QACA,KAAAP,MAAA,CAAAQ,MAAA,kBAAAD,QAAA;MACA;IACA;EACA;EACAE,OAAA;IACAC,SAAAC,IAAA;MACA,IAAAC,UAAA,GAAAC,MAAA,CAAAC,MAAA,KAAAH,IAAA;MACA,KAAAX,MAAA,CAAAC,QAAA,kBAAAU,IAAA;MACA,KAAAI,OAAA,CAAAC,IAAA,SAAAJ,UAAA,CAAAK,GAAA;IACA;IACAC,OAAA;MACA,KAAAC,KAAA,CAAAC,QAAA,CAAAC,QAAA;MACA,KAAArB,MAAA,CAAAC,QAAA;QACAqB,IAAA,OAAA/B,GAAA;QACAgC,QAAA,OAAA/B;MACA;MAEA,KAAAF,MAAA;IACA;IACAkC,MAAA;MACA,KAAAhC,MAAA;MACA,KAAAD,GAAA;MACA,KAAA4B,KAAA,CAAAC,QAAA,CAAAK,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}