{"ast":null,"code":"import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport teamService from \"@/services/team.service\";\nimport heroService from \"@/services/hero.service\";\nimport orgService from \"@/services/org.service\";\nVue.config.devtools = true;\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    orgPassword: \"\",\n    heroesAliases: [],\n    currentHero: null,\n    teams: [],\n    currentTeam: null,\n    orgNames: [],\n    currentOrg: null\n  },\n  mutations: {\n    SET_ORG_PASSWORD(state, password) {\n      state.orgPassword = password;\n    },\n    SET_HEROES_ALIASES(state, aliases) {\n      state.heroesAliases = aliases;\n    },\n    SET_CURRENT_HERO(state, hero) {\n      state.currentHero = hero;\n    },\n    SET_TEAMS(state, teams) {\n      state.teams = teams;\n    },\n    SET_CURRENT_TEAM(state, team) {\n      state.currentTeam = team;\n    },\n    SET_ORG_NAMES(state, names) {\n      state.orgNames = names;\n    },\n    SET_CURRENT_ORG(state, org) {\n      state.currentOrg = org;\n    }\n  },\n  actions: {\n    updateOrgPassword({\n      commit\n    }, password) {\n      console.log(password);\n      commit(\"SET_ORG_PASSWORD\", password);\n    },\n    updateHeroesAliases({\n      commit\n    }, aliases) {\n      commit(\"SET_HEROES_ALIASES\", aliases);\n    },\n    setCurrentHero({\n      commit\n    }, hero) {\n      commit(\"SET_CURRENT_HERO\", hero);\n    },\n    updateTeams({\n      commit\n    }, teams) {\n      commit(\"SET_TEAMS\", teams);\n    },\n    setCurrentTeam({\n      commit\n    }, team) {\n      commit(\"SET_CURRENT_TEAM\", team);\n    },\n    updateOrgNames({\n      commit\n    }, names) {\n      commit(\"SET_ORG_NAMES\", names);\n    },\n    setCurrentOrg({\n      commit\n    }, org) {\n      commit(\"SET_CURRENT_ORG\", org);\n    },\n    // Heroes\n    async fetchHeroes({\n      commit\n    }) {\n      const aliases = await heroService.getHeroes();\n      commit(\"SET_HEROES_ALIASES\", aliases);\n      return aliases;\n    },\n    async createHero({\n      dispatch\n    }, {\n      publicName,\n      realName,\n      powers\n    }) {\n      const response = await heroService.createHero(publicName, realName, powers);\n      dispatch(\"fetchHeroes\");\n      return response;\n    },\n    async updateHero({\n      dispatch\n    }, {\n      id,\n      publicName,\n      realName,\n      powers\n    }) {\n      const response = await heroService.updateHero(id, publicName, realName, powers, this.state.orgPassword);\n      await dispatch(\"fetchHeroes\");\n      return response;\n    },\n    async fetchHeroById({\n      commit\n    }, id) {\n      const response = await heroService.getHeroById(this.state.orgPassword, id);\n      commit(\"SET_CURRENT_HERO\", response);\n      return response;\n    },\n    //Teams\n    async fetchTeams({\n      commit\n    }) {\n      const teams = await teamService.getTeams();\n      commit(\"SET_TEAMS\", teams);\n      return teams.data;\n    },\n    async createTeam({\n      dispatch\n    }, data) {\n      const response = await teamService.createTeam(data.teamName);\n      dispatch(\"setCurrentTeam\", response.data);\n      return response;\n    },\n    async updateTeamAddHeroes({\n      dispatch\n    }, {\n      teamId,\n      addheroes\n    }) {\n      const response = await teamService.updateTeamAddHeroes(teamId, addheroes);\n      dispatch(\"setCurrentTeam\", response.data);\n      return response;\n    },\n    async updateTeamRemoveHeroes({\n      dispatch\n    }, {\n      teamId,\n      removeHeroes\n    }) {\n      const response = await teamService.updateTeamRemoveHeroes(teamId, removeHeroes);\n      dispatch(\"setCurrentTeam\", response.data);\n      return response;\n    },\n    //Orgs\n    async fetchOrgs({\n      commit\n    }) {\n      const organizations = await orgService.getOrg();\n      commit(\"SET_ORG_NAMES\", organizations);\n      return organizations;\n    },\n    async createOrg({\n      dispatch\n    }, {\n      name,\n      password\n    }) {\n      await orgService.createOrg(name, password);\n      dispatch(\"updateOrgPassword\", password);\n      const response = await dispatch(\"fetchOrgs\");\n      return response;\n    },\n    // eslint-disable-next-line\n    async updateOrgAddTeam({\n      dispatch\n    }, {\n      idTeam\n    }) {\n      const response = await orgService.updateOrgAddTeam(this.state.orgPassword, idTeam);\n      return response;\n    },\n    async updateOrgRemoveTeam({\n      dispatch\n    }, {\n      idTeam\n    }) {\n      await orgService.updateOrgRemoveTeam(this.state.orgPassword, idTeam);\n      const response = await dispatch(\"fetchOrgs\");\n      return response;\n    },\n    async fetchOrgById({\n      commit\n    }, id) {\n      const organization = await orgService.getOrgById(this.state.orgPassword, id.id);\n      commit(\"SET_CURRENT_ORG\", organization);\n      return organization;\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","teamService","heroService","orgService","config","devtools","use","Store","state","orgPassword","heroesAliases","currentHero","teams","currentTeam","orgNames","currentOrg","mutations","SET_ORG_PASSWORD","password","SET_HEROES_ALIASES","aliases","SET_CURRENT_HERO","hero","SET_TEAMS","SET_CURRENT_TEAM","team","SET_ORG_NAMES","names","SET_CURRENT_ORG","org","actions","updateOrgPassword","commit","console","log","updateHeroesAliases","setCurrentHero","updateTeams","setCurrentTeam","updateOrgNames","setCurrentOrg","fetchHeroes","getHeroes","createHero","dispatch","publicName","realName","powers","response","updateHero","id","fetchHeroById","getHeroById","fetchTeams","getTeams","data","createTeam","teamName","updateTeamAddHeroes","teamId","addheroes","updateTeamRemoveHeroes","removeHeroes","fetchOrgs","organizations","getOrg","createOrg","name","updateOrgAddTeam","idTeam","updateOrgRemoveTeam","fetchOrgById","organization","getOrgById"],"sources":["/Users/othmancharai/Documents/Othman_Charai/my-vue-2-project/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport teamService from \"@/services/team.service\";\nimport heroService from \"@/services/hero.service\";\nimport orgService from \"@/services/org.service\";\n\nVue.config.devtools = true;\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    orgPassword: \"\",\n    heroesAliases: [],\n    currentHero: null,\n    teams: [],\n    currentTeam: null,\n    orgNames: [],\n    currentOrg: null,\n  },\n  mutations: {\n    SET_ORG_PASSWORD(state, password) {\n      state.orgPassword = password;\n    },\n    SET_HEROES_ALIASES(state, aliases) {\n      state.heroesAliases = aliases;\n    },\n    SET_CURRENT_HERO(state, hero) {\n      state.currentHero = hero;\n    },\n    SET_TEAMS(state, teams) {\n      state.teams = teams;\n    },\n    SET_CURRENT_TEAM(state, team) {\n      state.currentTeam = team;\n    },\n    SET_ORG_NAMES(state, names) {\n      state.orgNames = names;\n    },\n    SET_CURRENT_ORG(state, org) {\n      state.currentOrg = org;\n    },\n  },\n  actions: {\n    updateOrgPassword({ commit }, password) {\n      console.log(password)\n      commit(\"SET_ORG_PASSWORD\", password);\n    },\n    updateHeroesAliases({ commit }, aliases) {\n      commit(\"SET_HEROES_ALIASES\", aliases);\n    },\n    setCurrentHero({ commit }, hero) {\n      commit(\"SET_CURRENT_HERO\", hero);\n    },\n    updateTeams({ commit }, teams) {\n      commit(\"SET_TEAMS\", teams);\n    },\n    setCurrentTeam({ commit }, team) {\n      commit(\"SET_CURRENT_TEAM\", team);\n    },\n    updateOrgNames({ commit }, names) {\n      commit(\"SET_ORG_NAMES\", names);\n    },\n    setCurrentOrg({ commit }, org) {\n      commit(\"SET_CURRENT_ORG\", org);\n    },\n\n    // Heroes\n    async fetchHeroes({ commit }) {\n      const aliases = await heroService.getHeroes();\n      commit(\"SET_HEROES_ALIASES\", aliases);\n      return aliases;\n    },\n\n    async createHero({ dispatch }, { publicName, realName, powers }) {\n      const response = await heroService.createHero(\n        publicName,\n        realName,\n        powers\n      );\n      dispatch(\"fetchHeroes\");\n      return response;\n    },\n\n    async updateHero(\n      { dispatch },\n      { id, publicName, realName, powers }\n    ) {\n      const response = await heroService.updateHero(\n        id,\n        publicName,\n        realName,\n        powers,\n        this.state.orgPassword\n      );\n      await dispatch(\"fetchHeroes\");\n      return response;\n    },\n\n    async fetchHeroById({ commit }, id) {\n      const response = await heroService.getHeroById(\n        this.state.orgPassword,\n        id\n      );\n      commit(\"SET_CURRENT_HERO\", response);\n      return response;\n    },\n\n    //Teams\n    async fetchTeams({ commit }) {\n      const teams = await teamService.getTeams();\n      commit(\"SET_TEAMS\", teams);\n      return teams.data;\n    },\n\n    async createTeam({ dispatch }, data) {\n      const response = await teamService.createTeam(data.teamName);\n      dispatch(\"setCurrentTeam\", response.data);\n      return response;\n    },\n\n    async updateTeamAddHeroes({ dispatch }, { teamId, addheroes }) {\n      const response = await teamService.updateTeamAddHeroes(teamId, addheroes);\n      dispatch(\"setCurrentTeam\", response.data);\n      return response;\n    },\n\n    async updateTeamRemoveHeroes({ dispatch }, { teamId, removeHeroes }) {\n      const response = await teamService.updateTeamRemoveHeroes(\n        teamId,\n        removeHeroes\n      );\n      dispatch(\"setCurrentTeam\", response.data);\n      return response;\n    },\n\n    //Orgs\n    async fetchOrgs({ commit }) {\n      const organizations = await orgService.getOrg();\n      commit(\"SET_ORG_NAMES\", organizations);\n      return organizations;\n    },\n\n    async createOrg({ dispatch }, { name, password }) {\n      await orgService.createOrg(name, password);\n      dispatch(\"updateOrgPassword\", password);\n      const response = await dispatch(\"fetchOrgs\");\n      return response;\n    },\n\n    // eslint-disable-next-line\n    async updateOrgAddTeam({ dispatch }, { idTeam }) {\n      const response = await orgService.updateOrgAddTeam(\n        this.state.orgPassword,\n        idTeam\n      );\n\n      return response;\n    },\n\n    async updateOrgRemoveTeam({ dispatch }, { idTeam }) {\n      await orgService.updateOrgRemoveTeam(this.state.orgPassword, idTeam);\n      const response = await dispatch(\"fetchOrgs\");\n      return response;\n    },\n\n    async fetchOrgById({ commit }, id) {\n      const organization = await orgService.getOrgById(\n        this.state.orgPassword,\n        id.id\n      );\n      commit(\"SET_CURRENT_ORG\", organization);\n      return organization;\n    },\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}